= field_set_tag nil, id: 'distance-filter', class: 'input-search-filter input-search-filter-option' do
  = label_tag :distance, 'Distance', style: "font-size: 16px;"
  %hr
  = label_tag 'within', t('labels.distance_filter')
  = select_tag :distance, options_for_select([1, 2, 10, 25], @selected_distance_filter), include_blank: 'All', class: "category-search-select-left-menu"

%div{ :style => "margin-left: 10px; margin-top: 10px;" }
  = "Of"

= field_set_tag nil, id: 'geolocation-filter', class: 'input-search-filter input-search-filter-option' do
  = label_tag 'address', 'Address', id: 'address-label'
  #geolocate-box
    = hidden_field_tag :lat, @lat
    = hidden_field_tag :long, @long
    - if @lat.present? && @long.present?
      = button_tag 'geolocate', id: 'geolocate' do
        %i.fa.fa-crosshairs.fa-lg.geolocated#button-geolocate{ "aria-label" => t('buttons.services_near_me'), "title" => t('buttons.services_near_me') }
    - else 
      %i.fa.fa-crosshairs.fa-lg#button-geolocate{ "aria-label" => t('buttons.services_near_me'), "title" => t('buttons.services_near_me') }

    = text_field_tag :address

:javascript
  var options = {
    enableHighAccuracy: false,
    timeout: 20000,
    maximumAge: 9999999
  };

  function success(pos) {
    let crd = pos.coords;
    let params = new URLSearchParams(window.location.search);
    params.set('lat', crd.latitude)
    params.set('long', crd.longitude)
    window.location.href = `${location.pathname}?${params}`
  };

  function error(err) {
    console.warn(`ERROR(${err.code}): ${err.message}`);
  }

  $('#button-geolocate').on('click', function(e){
    e.preventDefault();
    navigator.geolocation.getCurrentPosition(success, error, options);
  })
